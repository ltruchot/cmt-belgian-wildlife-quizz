image: docker:latest
services:
  - docker:dind

stages:
  - build
  - deploy

variables:
  IMAGE_TAG: gitlab.committers.ngo:5555/elm-generic-quiz/v1:latest

before_script:
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN gitlab.committers.ngo:5555

build:
  stage: build
  script:
    - docker build --pull -t $IMAGE_TAG .
    - docker push $IMAGE_TAG
  tags:
    - docker-builder
  only:
    - master

deploy:
  stage: deploy
  script:
    ## Install ssh-agent if not already installed, it is required by Docker.
    ## (change apt-get to yum if you use an RPM-based image)
    ##
    - "which ssh-agent || ( apk update -y && apk add openssh-client -y )"

    ##
    ## Run ssh-agent (inside the build environment)
    ##
    - eval $(ssh-agent -s)

    ##
    ## Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
    ## We're using tr to fix line endings which makes ed25519 keys work
    ## without extra base64 encoding.
    ## https://gitlab.com/gitlab-examples/ssh-private-key/issues/1#note_48526556
    ##
    - echo "$CI_SSH_KEY" | tr -d '\r' | ssh-add - > /dev/null

    ##
    ## Create the SSH directory and give it the right permissions
    ##
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh

    ##
    ## Assuming you created the SSH_KNOWN_HOSTS variable, uncomment the
    ## following two lines.
    ##
    - echo "$CI_SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - ssh -p22 root@206.189.14.224 "sudo docker pull $IMAGE_TAG"
    - scp -p22 docker-compose.yml root@206.189.14.224:~/autoquizz.com
    - ssh -p22 root@206.189.14.224 "cd autoquizz.com && sudo docker-compose up -d"
    - ssh -p22 root@206.189.14.224 "sudo docker exec autoquizz.com node server.js""
  only:
    - master
